{
  "name": "stack-scroll-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/stack-scroll-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useMemo } from \"react\";\r\nimport { ScrollVelocityRow } from \"@/registry/default/ui/stack-scroll\";\r\n\r\n\r\n// Dynamic responsive row count using a simple custom hook (you can use any similar approach)\r\nfunction useResponsiveRowCount() {\r\n  // breakpoint 768px, you can adjust to your needs\r\n  const [rowCount, setRowCount] = React.useState(\r\n    typeof window !== \"undefined\" ? (window.innerWidth < 768 ? 3 : 2) : 2,\r\n  );\r\n  React.useEffect(() => {\r\n    const checkRows = () => setRowCount(window.innerWidth < 768 ? 3 : 2);\r\n    window.addEventListener(\"resize\", checkRows);\r\n    return () => window.removeEventListener(\"resize\", checkRows);\r\n  }, []);\r\n  return rowCount;\r\n}\r\n\r\n// Helper: splits n items into `rows` arrays (returns an array-of-arrays)\r\nfunction splitIntoRows<T>(arr: T[], rows: number): T[][] {\r\n  const baseSize = Math.floor(arr.length / rows);\r\n  const remainder = arr.length % rows;\r\n  let res: T[][] = [];\r\n  let pointer = 0;\r\n  for (let i = 0; i < rows; i++) {\r\n    const size = baseSize + (i < remainder ? 1 : 0);\r\n    res.push(arr.slice(pointer, pointer + size));\r\n    pointer += size;\r\n  }\r\n  return res;\r\n}\r\n\r\nconst IMAGE_LINKS = [\r\n  \r\n  \"https://img.icons8.com/?size=100&id=71257&format=png&color=000000\", // Angular\r\n  \"https://img.icons8.com/?size=100&id=20909&format=png&color=000000\", // Html5\r\n  \"https://img.icons8.com/?size=100&id=7gdY5qNXaKC0&format=png&color=000000\", // Css3\r\n  \"https://img.icons8.com/?size=100&id=PXTY4q2Sq2lG&format=png&color=000000\", // Javascript\r\n  \"https://img.icons8.com/?size=100&id=wpZmKzk11AzJ&format=png&color=000000\", // Typescript\r\n  \"https://img.icons8.com/?size=100&id=l75OEUJkPAk4&format=png&color=000000\", // Python\r\n  \"https://img.icons8.com/?size=100&id=123603&format=png&color=000000\", // React\r\n  \"https://img.icons8.com/?size=100&id=cdYUlRaag9G9&format=png&color=000000\", // Docker\r\n  \"https://img.icons8.com/?size=100&id=tbleCw0ch6QC&format=png&color=000000\", // Vue.js\r\n  \"https://img.icons8.com/?size=100&id=CIAZz2CYc6Kc&format=png&color=000000\", // Tailwind CSS\r\n  \"https://img.icons8.com/?size=100&id=hsPbhkOH4FMe&format=png&color=000000\", // Node.js\r\n  \"https://img.icons8.com/?size=100&id=2ZOaTclOqD4q&format=png&color=000000\", // Express.js\r\n  \"https://img.icons8.com/?size=100&id=8rKdRqZFLurS&format=png&color=000000\", // MongoDB\r\n  \"https://img.icons8.com/?size=100&id=9nLaR5KFGjN0&format=png&color=000000\", // MySQL\r\n  \"https://img.icons8.com/?size=100&id=Pv4IGT0TSpt8&format=png&color=000000\", // PostgreSQL\r\n  \"https://img.icons8.com/?size=100&id=cvzmaEA4kC0o&format=png&color=000000\", //Kubernetes\r\n  \"https://img.icons8.com/?size=100&id=20906&format=png&color=000000\", // Git\r\n  \"https://img.icons8.com/?size=100&id=zfHRZ6i1Wg0U&format=png&color=000000\", //Figma\r\n  \"https://img.icons8.com/?size=100&id=13679&format=png&color=000000\", //Java\r\n  \"https://img.icons8.com/?size=100&id=TpULddJc4gTh&format=png&color=000000\", //C++\r\n  // ...add more if needed\r\n];\r\n\r\nexport default function ScrollBasedVelocityImagesDemo() {\r\n  const rowCount = useResponsiveRowCount(); // 2 or 3 rows\r\n\r\n  // Split the images into rowCount segments\r\n  const imagesPerRow = useMemo(() => splitIntoRows(IMAGE_LINKS, rowCount), [rowCount]);\r\n  // Define the direction for each row\r\n  const directions = useMemo(() =>\r\n      rowCount === 2\r\n        ? [1, -1]\r\n        : [1, -1, 1],\r\n    [rowCount]\r\n  );\r\n\r\n  return (\r\n    <div className=\"relative flex w-full flex-col items-center justify-center overflow-hidden py-8\">\r\n      \r\n      {imagesPerRow.map((rowImages, i) => (\r\n        <ScrollVelocityRow key={i} baseVelocity={6} direction={directions[i] as  1 | -1} className=\"py-4\">\r\n          {rowImages.map((src: string, idx: number) => (\r\n            <img\r\n              key={idx}\r\n              src={`${src}&ixlib=rb-4.0.3`}\r\n              alt=\"\"\r\n              width={120}\r\n              height={80}\r\n              loading=\"lazy\"\r\n              decoding=\"async\"\r\n              className=\"inline-block h-20 w-28 rounded-lg object-contain bg-transparent hover:scale-150 transition-transform duration-300 ease-in-out\"\r\n            />\r\n          ))}\r\n        </ScrollVelocityRow>\r\n      ))}\r\n\r\n      <div className=\"pointer-events-none absolute inset-y-0 left-0 w-1/4 bg-gradient-to-r from-background\"></div>\r\n      <div className=\"pointer-events-none absolute inset-y-0 right-0 w-1/4 bg-gradient-to-l from-background\"></div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}