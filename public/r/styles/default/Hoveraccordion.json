{
  "name": "Hoveraccordion",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/Hoveraccordion.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Accordion as AccordionPrimitive } from \"@base-ui-components/react/accordion\";\r\nimport { ChevronDown } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// --- Core Accordion components ---\r\nfunction Accordion({\r\n  className,\r\n  openMultiple = false,\r\n  ...props\r\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\r\n  return (\r\n    <AccordionPrimitive.Root\r\n      data-slot=\"accordion\"\r\n      openMultiple={openMultiple}\r\n      className={cn(\"flex w-full max-w-lg flex-col justify-center\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AccordionItem({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\r\n  return (\r\n    <AccordionPrimitive.Item\r\n      data-slot=\"accordion-item\"\r\n      className={cn(\r\n        \"border-b last:border-b-0 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AccordionTrigger({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\r\n  return (\r\n    <AccordionPrimitive.Header data-slot=\"accordion-header\">\r\n      <AccordionPrimitive.Trigger\r\n        data-slot=\"accordion-trigger\"\r\n        className={cn(\r\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex w-full cursor-pointer items-center rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-panel-open]>svg]:rotate-180\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        <ChevronDown className=\"text-muted-foreground ml-auto size-4 shrink-0 transition-transform duration-300 ease-out\" />\r\n      </AccordionPrimitive.Trigger>\r\n    </AccordionPrimitive.Header>\r\n  );\r\n}\r\n\r\nfunction AccordionContent({\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof AccordionPrimitive.Panel>) {\r\n  return (\r\n    <AccordionPrimitive.Panel\r\n      data-slot=\"accordion-content\"\r\n      className=\"h-[var(--accordion-panel-height)] overflow-hidden text-left text-sm transition-[height,opacity] duration-700 ease-out data-[ending-style]:h-0 data-[ending-style]:opacity-0 data-[starting-style]:h-0 data-[starting-style]:opacity-0\"\r\n      {...props}\r\n    >\r\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\r\n    </AccordionPrimitive.Panel>\r\n  );\r\n}\r\n\r\n// --- Simple wrapper that takes just a list of questions/answers ---\r\ntype QA = { question: string; answer: string };\r\n\r\nfunction HoverAccordion({ items }: { items: QA[] }) {\r\n  const [openItem, setOpenItem] = React.useState<string | null>(null);\r\n   return (\r\n    <Accordion openMultiple={false} value={openItem ? [openItem] : []}>\r\n      {items.map((item, index) => {\r\n        const value = `item-${index + 1}`;\r\n        return (\r\n          <AccordionItem\r\n            key={value}\r\n            value={value}\r\n            onMouseEnter={() => setOpenItem(value)}\r\n            onMouseLeave={() => setOpenItem(null)}\r\n          >\r\n            <AccordionTrigger>{item.question}</AccordionTrigger>\r\n            <AccordionContent>{item.answer}</AccordionContent>\r\n          </AccordionItem>\r\n        );\r\n      })}\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n  AccordionContent,\r\n  HoverAccordion,\r\n};\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}